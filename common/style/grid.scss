@mixin grid-base {
	height: 100%;
	display: grid;
	width: 100%;
	$darkenPct:12%;
	$border: hsl(261, 20%, 70%);
	.grid-row:nth-child(odd) {
		$color: hsl(261, 93%, 85%);
		&.highlight-included > .grid-item {
			&.highlight-column {
				background-color: scale-color($color, $whiteness:-$darkenPct, $blackness:+$darkenPct) !important;
			}
			background-color: $color !important;
			border-color: $border;
		}
	}
	.grid-row:first-child .grid-item.highlight-column {
		filter: brightness(85%);
	}
	.grid-row:nth-child(even) {
		&.highlight-included > .grid-item {
			$color: hsl(261, 65%, 90%);
			&.highlight-column {
				background-color: scale-color($color,  $whiteness:-$darkenPct, $blackness:+$darkenPct) !important;
			}
			background-color: $color !important;
			border-color: $border;
		}
	}
	.grid-row {
		.grid-item {
			border-radius: 0;
			position: relative;
			padding: 0.5rem 1rem;
			color: #212529;
			background-color: white;
			border: 1px solid #e3e3e3;
		}

		display: contents;

		&:not(:first-child) .grid-item:not(:first-child) {
			display: flex;
			justify-content: center;
			justify-items: center;
		}
	}
}

@mixin vertical-labels {
	display: flex;
	justify-content: start;
	align-items: center;
	writing-mode: vertical-rl;
}
$grid-template: 200px repeat(var(--grid-columns), 42px);
@mixin grid-layout($isHorizontal) {
	@include grid-base;

	@if ($isHorizontal) {
		overflow-x: scroll;
		grid-auto-flow: column;
		grid-template-rows: $grid-template;
		// height:$grid-constrained-dimension
	} @else {
		grid-auto-flow: row;
		grid-template-columns: $grid-template;
		// width:$grid-constrained-dimension
	}
	.grid-item:nth-child(2) {
		border-right-width: 2px;
	}
	.grid-row {
		.grid-item:not(:first-child) {
			@if ($isHorizontal) {
				margin-top: -1px;
			} @else {
				margin-left: -1px;
			}
		}

		&:not(:first-child) .grid-item {
			@if ($isHorizontal) {
				margin-left: -1px;
			} @else {
				margin-top: -1px;
			}
		}

		@if ($isHorizontal) {
			// &:not(:first-child) .grid-item:first-child {@include vertical-labels;}
		} @else {
			&:first-child .grid-item:not(:first-child) {
				@include vertical-labels;
			}
		}

		&:not(:first-child):nth-child(odd) .grid-item {
			background-color: hsl(0, 0%, 95%);
		}
		&:first-child .grid-item {
			background-color: hsl(0, 0%, 80%);
			border-color: #b3b3b3;
			@if ($isHorizontal) {
				&:first-child {
					border-top-left-radius: 5px;
				}
				&:last-child {
					border-bottom-left-radius: 5px;
				}
			} @else {
				&:first-child {
					border-top-left-radius: 5px;
				}
				&:last-child {
					border-top-right-radius: 5px;
				}
			}
			font-weight: 700;
		}

		&:last-child {
			@if ($isHorizontal) {
				.grid-item:first-child {
					border-top-right-radius: 5px;
				}
				.grid-item:last-child {
					border-bottom-right-radius: 5px;
				}
			} @else {
				.grid-item:first-child {
					border-bottom-left-radius: 5px;
				}
				.grid-item:last-child {
					border-bottom-right-radius: 5px;
				}
			}
		}
	}
}

@mixin grid-horizontal {
	@include grid-layout($isHorizontal: true);

	.grid-row:first-child {
		.grid-item {
			border-right-width: 3px;
			width: 300px;
			position: sticky;
			left: 0;
			z-index: 100;
		}
	}
}

@mixin grid-vertical {
	@include grid-layout($isHorizontal: false);
	.grid-row:first-child {
		.grid-item {
			border-bottom-width: 3px;
			max-height: 350px;
			.class-label {
				height: max-content;
			}
			z-index: 100;
		}
	}
}
